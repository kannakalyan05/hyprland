# Environment Variables
# see https://wiki.hyprland.org/Configuring/Environment-variables/ 

# Theming Related Variables
# Set cursor size. See FAQ below for why you might want this variable set.
# https://wiki.hyprland.org/FAQ/
env = XCURSOR_SIZE,24

# Set a GTK theme manually, for those who want to avoid appearance tools such as lxappearance or nwg-look
#env = GTK_THEME,

# Set your cursor theme. The theme needs to be installed and readable by your user.
#env = XCURSOR_THEME,

# the line below may help with multiple monitors
#env = WLR_EGL_NO_MODIFIERS,1

#XDG Specifications
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

# Toolkit Backend Variables

# GTK: Use wayland if available, fall back to x11 if not.
#env = GDK_BACKEND,wayland,x11

# QT: Use wayland if available, fall back to x11 if not.
#env = QT_QPA_PLATFORM,wayland,xcb

# Run SDL2 applications on Wayland. Remove or set to x11 if games that 
# provide older versions of SDL cause compatibility issues
#env = SDL_VIDEODRIVER,wayland 

# Clutter package already has wayland enabled, this variable 
#will force Clutter applications to try and use the Wayland backend
#env = CLUTTER_BACKEND,wayland 

# QT Variables

# (From the QT documentation) enables automatic scaling, based on the monitor’s pixel density
# https://doc.qt.io/qt-5/highdpi.html
#env = QT_AUTO_SCREEN_SCALE_FACTOR,1

# Tell QT applications to use the Wayland backend, and fall back to x11 if Wayland is unavailable
#env = QT_QPA_PLATFORM,wayland,xcb

# Disables window decorations on QT applications
#env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1

#Tells QT based applications to pick your theme from qt5ct, use with Kvantum.
#env = QT_QPA_PLATFORMTHEME,qt5ct

##################################################################################################
##################################################################################################
##												##
##												##
##	 				NVIDIA SETTINGS						##
##												##
##												##
##################################################################################################
##################################################################################################

# Environment Variables NVIDIA Specific
# See the wiki for more info as some work is required
# https://wiki.hyprland.org/hyprland-wiki/pages/Nvidia/
#############################################################env = WLR_NO_HARDWARE_CURSORS,1

# Hardware acceleration on NVIDIA GPUs
# See Archwiki Hardware Acecleration Page for details and necessary values before setting this variable.
# https://wiki.archlinux.org/title/Hardware_video_acceleration
############################################################env = LIBVA_DRIVER_NAME,nvidia

# The lines below may cause issues, proceed at your own risk

# To force GBM as a backend, set the following environment variables:
# See Archwiki Wayland Page for more details on those variables.
# https://wiki.archlinux.org/title/Wayland#Requirements
#env = GBM_BACKEND,nvidia-drm
#env = __GLX_VENDOR_LIBRARY_NAME,nvidia


# Controls if G-Sync capable monitors should use Variable Refresh Rate (VRR)
# See Nvidia Documentation for details.
# https://download.nvidia.com/XFree86/Linux-32bit-ARM/375.26/README/openglenvvariables.html
#env = __GL_GSYNC_ALLOWED,

# Controls if Adaptive Sync should be used. Recommended to set as “0” to avoid having problems on some games.   
#env = __GL_VRR_ALLOWED,

# use legacy DRM interface instead of atomic mode setting. Might fix flickering issues.
#env = WLR_DRM_NO_ATOMIC,1
